const express = require("express");
//const { smm } = require("./bot/middleware/on/message.on");
const { bot } = require("./bot/connections/token.connection.js");
const { CronJob } = require("cron");
const {
   updateUsersByDelivered,
   updateUserByDead,
} = require("./bot/common/sequelize/user-model.sequelize.js");
require("dotenv").config();
const path = require("path");

const PORT = 8888;

const app = express();

app.use(express.json());

const smm = async (ctx, text) => {
   try {
      console.log("–†–ê–ë–û–¢–ê–ï–¢", ctx);
      const users = await getUser();
      let userIds = users.map(({ login }) => login);
      // let userIds = [
      //    "385874539",
      //    "555715489",
      //    "123124124",
      //    "214124124",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      //    "123124124",
      //    "214124124",
      //    "124124452",
      //    "214521412",
      // ];
      //const send = [];
      count = 0;
      //2 –º–∏–Ω—É—Ç—ã –æ—Ç–¥—ã—Ö 1 –º–∏–Ω—É—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∞
      const job = new CronJob(
         "*/3 * * * *",
         async function () {
            if (!userIds.length) {
               console.log("–ú–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–∫–æ–Ω—á–∏–ª—Å—è");
               job.stop();
               return;
            }

            const shortJob = new CronJob(
               //–í—Å—é –º–∏–Ω—É—Ç—É –ø–æ 20 –∑–∞–ø–∏—Å–µ–π
               "*/1 * * * * *",
               async function () {
                  const rangeUserIds = userIds.splice(0, 20);
                  count++;
                  for await (userId of rangeUserIds) {
                     try {
                        await ctx.telegram.sendMessage(userId, text, {
                           reply_markup: {
                              inline_keyboard: [
                                 [
                                    {
                                       text: "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤",
                                       callback_data: "buyFile",
                                    },
                                 ],
                              ],
                           },
                        });
                        console.log(
                           `–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`
                        );
                        await updateUsersByDelivered(userId);
                     } catch (err) {
                        console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - ${userId}`);
                        await updateUserByDead(userId);
                     }
                  }

                  if (count == 60 || !userIds.length) {
                     shortJob.stop();
                     count = 0;
                     console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!!");

                     return;
                  }
               },

               null,
               true
            );
         },
         null,
         true
      );
   } catch (err) {
      console.log(err);
   }
};

app.post("/", (req, res) => {
   console.log(req.body, smm);
   smm(bot, req.body.text);
   res.status(200).json("–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç");
});

app.listen(PORT, () => console.log("Server started "));

// Commands
require("./bot/middleware/command/start.command");

//ON

require("./bot/middleware/on/message.on");
require("./bot/middleware/on/callback_query.js");

// CONNECTION
require("./bot/connections/local.connection");

bot.on("pre_checkout_query", (ctx) => ctx.answerPreCheckoutQuery(true)); // –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ –æ–ø–ª–∞—Ç–µ

bot.on("successful_payment", async (ctx) => {
   // –æ—Ç–≤–µ—Ç –≤ —Å–ª—É—á–∞–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã
   await ctx.replyWithPhoto(
      { source: path.resolve("/root/bot-telegram-new/img/cat.jpg") },
      {
         caption:
            "–ë–ª–∞–≥–æ–¥–∞—Ä—é —Ç–µ–±—è –∑–∞ –¥–æ–≤–µ—Ä–∏–µ)\n\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∞—Å—å –∫ –º–æ–µ–º—É –∏–Ω—Ç–µ–Ω—Å–∏–≤—É ü•≥\n\n–ò–Ω—Ç–µ–Ω—Å–∏–≤ –Ω–∞—á–Ω–µ—Ç—Å—è 4 –º–∞—Ä—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª, —Ç–∞–º –±—É–¥–µ—Ç –≤—Å—è –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤—É –∏ –∞–Ω–æ–Ω—Å—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫. –¢–∞–º –∂–µ —è —Ä–∞—Å—Å–∫–∞–∂—É –ø—Ä–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å –¥–æ –Ω–∞—á–∞–ª–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞.\n\nhttps://t.me/+_XKrCDhGfSYwNDBi \n\n–ü–æ–∫–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤ –Ω–µ –Ω–∞—á–∞–ª—Å—è, –ø–æ–ø—Ä–æ–±—É–π —ç—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.\n\nhttps://youtube.com/playlist?list=PLIg2IFzDwpNKPILc3-RnRdDyep1HCEmTD&si=DHjikkSv7BBH61K1\n\n–î–æ –≤—Å—Ç—Ä–µ—á–∏ ‚ù§Ô∏è",
      }
   );
});
